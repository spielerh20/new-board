
int l_motor = 0;
int r_motor = 2;
int speed = 85; 
int slow = 20;
int target = 250;
int pause = 350;
int pause_2 = 100;	
int right_range = 2;
int left_range = 0;
int middle_range = 1;
int left_bump = 8;
int black_target = 800;
int tophat = 5;
int tophat_2 = 6;
int counter = 0;

int main(){	
	
	wallrun();
	
}

// def 
void forwards(){
	motor(l_motor,speed);// def for it go forward 
	motor(r_motor,speed);
}

void backwards(){
	motor(l_motor,-speed);// def for it go backwards 
	motor(r_motor,-speed);
}

void veer_left(){
	motor(r_motor,speed);
	motor(l_motor,slow);
}

void veer_right(){
	motor(r_motor,slow);
	motor(l_motor,speed);
}

void turn_left(){
	motor(l_motor,-speed);
	motor(r_motor,100);
	
}

void wallrun(){
	while (counter < 4){
		if (analog(right_range) > 300) {
			veer_right();
		}
		if(analog(right_range) < 300) {
			veer_left();
		}
		if (analog(tophat_2) > 500) {
			counter ++ ;
			forwards();
			msleep(300);
			printf("count = %d \n" ,counter);
			
		}
		if(analog(middle_range) < 400) {
			turn_left();
		}
		
	}
	
	ao();
	return 0;
}

